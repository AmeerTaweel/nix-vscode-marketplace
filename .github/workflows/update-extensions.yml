name: Update Extensions

on:
  # Enable manual trigger
  workflow_dispatch:
  # Trigger every day
  schedule:
    - cron: "0 0 * * *"
  push:

env:
  nixpkgs: nixpkgs=https://github.com/NixOS/nixpkgs/archive/cd87aef066e4bdbb1139845500072bd252d37c5e.tar.gz
  extra_nix_config: |
    substituters = https://cache.nixos.org https://nix-community.cachix.org https://fog.cachix.org
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= fog.cachix.org-1:FAxiA6qMLoXEUdEq+HaT24g1MjnxdfygrbrLDBp6U/s=

  run_updater: export DENO_DIR=.deno && nix run nixpkgs#deno -- run --allow-write --allow-net={0} --no-prompt updater/index.ts {1} nvfetch/{2}.toml

  vscode: vscode-marketplace

  nvfetch_workflow: ./.github/workflows/nvfetch.yaml
  # commit_and_push: |
  #   git config user.name github-actions
  #   git config user.email github-actions@github.com
  #   git config pull.rebase true
  #   git config rebase.autoStash true
  #   git pull
  #   git add nvfetch/{0}.toml generated/{1}
  #   git diff --quiet && git diff --staged --quiet || git commit -m "action: update {2} extensions"
  #   git push

# https://docs.github.com/en/actions/learn-github-actions/expressions#example-returning-a-json-object
# https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs#example-defining-outputs-for-a-job

jobs:
  read_config:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Save config
        id: set-matrix
        run: echo "matrix=$(jq -c . < .github/workflows/config.json)" >> $GITHUB_OUTPUT

  update_extensions:
    needs: read_config
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.read_config.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install latest Nix
        uses: cachix/install-nix-action@v17
        with:
          extra_nix_config: ${{ env.extra_nix_config }}
          nix_path: ${{ env.nixpkgs }}

      - name: Run Updater on ${{ matrix.name }} extensions
        run: ${{ format(env.run_updater, matrix.allow_net, matrix.target, matrix.target) }}

  nvfetch-1:
    needs: update_extensions
    uses: ./.github/workflows/nvfetch.yaml
    with: 
      NAME: ${{ env.vscode }}
      FIRST_BLOCK: 1
      BLOCK_LIMIT: 1
      JSON_INIT: tmp/init/init.json
      NIX_INIT: tmp/init/init.nix

  nvfetch-2:
    needs: update_extensions
    uses: ./.github/workflows/nvfetch.yaml
    with:
      NAME: ${{ env.vscode }}
      FIRST_BLOCK: 2
      BLOCK_LIMIT: 1


    # needs: [update_extensions, read_config]
    # runs-on: ubuntu-latest
    # strategy:
    #   matrix: ${{ fromJSON(needs.read_config.outputs.matrix) }}
    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v3

    #   - name: Install latest Nix
    #     uses: cachix/install-nix-action@v17
    #     with:
    #       extra_nix_config: ${{ env.extra_nix_config }}
    #       nix_path: ${{ env.nixpkgs }}

    #   - name: Run nvfetcher on ${{ matrix.marketplace }}
    #     env:
    #       NAME: ${{ matrix.target }}
    #       BLOCK_SIZE: 3
    #       BLOCK_LIMIT: 2
    #       FIRST_BLOCK: 1
    #     run: nix run .#scripts.nvfetch

  #     - name: Commit and push changes
  #       run: ${{ format(env.commit_and_push, matrix.target, matrix.target, matrix.target) }}
  
  # read_config-1:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     matrix: ${{ steps.set-matrix.outputs.matrix }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - id: set-matrix
  #       run: echo "::set-output name=matrix::$(jq -c . < .github/workflows/config-1.json)"

  # update_extensions-1:
  #   needs: [read_config-1, update_extensions]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix: ${{ fromJSON(needs.read_config-1.outputs.matrix) }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Install latest Nix
  #       uses: cachix/install-nix-action@v17
  #       with:
  #         extra_nix_config: ${{ env.extra_nix_config }}
  #         nix_path: ${{ env.nixpkgs }}

  #     - name: Run Updater on ${{ matrix.name }} extensions
  #       run: ${{ format(env.run_updater, matrix.allow_net, matrix.target, matrix.target) }}

  #     - name: Run nvfetcher on ${{ matrix.name }} extensions
  #       env:
  #         NAME: ${{ matrix.target }}
  #         BLOCK_SIZE: ${{ matrix.BLOCK_SIZE }}
  #         LIMIT: ${{ matrix.limit }}
  #       run: |
  #         bash ./.github/scripts/nvfetch.sh

  #     - name: Commit and push changes
  #       run: ${{ format(env.commit_and_push, matrix.target, matrix.target, matrix.target) }}
