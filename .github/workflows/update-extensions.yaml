name: Update Extensions

on:
  # Enable manual trigger
  workflow_dispatch:
  # Trigger every day
  schedule:
    - cron: "0 0 * * *"
  push:

env:
  nixpkgs: nixpkgs=https://github.com/NixOS/nixpkgs/archive/cd87aef066e4bdbb1139845500072bd252d37c5e.tar.gz
  extra_nix_config: |
    substituters = https://cache.nixos.org https://nix-community.cachix.org https://fog.cachix.org
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= fog.cachix.org-1:FAxiA6qMLoXEUdEq+HaT24g1MjnxdfygrbrLDBp6U/s=

  run_updater: export DENO_DIR=.deno && nix run nixpkgs#deno -- run --allow-write --allow-net={0} --no-prompt updater/index.ts {1} nvfetch/{2}.toml

  vscode: vscode-marketplace

  nvfetch_workflow: ./.github/workflows/nvfetch.yaml
  commit_and_push: |
    git config user.name github-actions
    git config user.email github-actions@github.com
    git add nvfetch/{0}.toml
    git diff --quiet && git diff --staged --quiet || git commit -m "action: update {1} extensions"
    git push

# https://docs.github.com/en/actions/learn-github-actions/expressions#example-returning-a-json-object
# https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs#example-defining-outputs-for-a-job

jobs:
  read-configs:
    runs-on: ubuntu-latest
    outputs:
      update-extensions: ${{ steps.update-extensions.outputs.update-extensions }}
      nvfetch-vscode-marketplace: ${{ steps.nvfetch-vscode-marketplace.outputs.nvfetch-vscode-marketplace }}
      combine-vscode-marketplace: ${{ steps.combine-vscode-marketplace.outputs.combine-vscode-marketplace }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update extensions
        id: update-extensions
        run: echo "update-extensions=$(jq -c . < .github/workflows/configs/update-extensions.json)" >> $GITHUB_OUTPUT

      - name: nvfetch VSCode
        id: nvfetch-vscode-marketplace
        run: echo "nvfetch-vscode-marketplace=$(jq -c . < .github/workflows/configs/nvfetch-vscode-marketplace.json)" >> $GITHUB_OUTPUT

      - name: Combine VSCode Marketplace
        id: combine-vscode-marketplace
        run: echo "combine-vscode-marketplace=$(jq -c . < .github/workflows/configs/combine-vscode-marketplace.json)" >> $GITHUB_OUTPUT

  # update-extensions:
  #   needs: read-configs
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix: ${{ fromJSON(needs.read-configs.outputs.update-extensions) }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Install latest Nix
  #       uses: cachix/install-nix-action@v18
  #       with:
  #         extra_nix_config: ${{ env.extra_nix_config }}
  #         nix_path: ${{ env.nixpkgs }}

  #     - name: Run Updater on ${{ matrix.NAME }} extensions
  #       run: ${{ format(env.run_updater, matrix.ALLOW_NET, matrix.TARGET, matrix.TARGET) }}

  #     - name: Commit and push changes
  #       run: ${{ format(env.commit_and_push, matrix.TARGET, matrix.TARGET) }}

  # Assume no race conditions when pushing
  nvfetch-vscode-marketplace:
    # needs: [read-configs, update-extensions]
    name: ${{ matrix.MARKETPLACE }}
    needs: [read-configs]
    strategy:
      matrix: ${{ fromJSON(needs.read-configs.outputs.nvfetch-vscode-marketplace) }}
      fail-fast: false
    uses: ./.github/workflows/nvfetch.yaml
    with:
      TARGET: ${{ matrix.TARGET }}
      NAME: ${{ matrix.NAME }}
      ACTION_ID: ${{ matrix.ACTION_ID }}
      FIRST_BLOCK: ${{ matrix.FIRST_BLOCK }}
      BLOCK_LIMIT: ${{ matrix.BLOCK_LIMIT }}
      BLOCK_SIZE: ${{ matrix.BLOCK_SIZE }}
      MARKETPLACE: ${{ matrix.MARKETPLACE }}

  combine-vscode-marketplace:
    name: combine ${{ matrix.NAME }}
    needs: [nvfetch-vscode-marketplace, read-configs]
    strategy:
      matrix: ${{ fromJSON(needs.read-configs.outputs.combine-vscode-marketplace) }}
    uses: ./.github/workflows/combine.yaml
    with:
      NAME: ${{ matrix.TARGET }}
      # includes update-extensions as it also pushes a commit
      NUMBER_JOBS: ${{ matrix.NUMBER_JOBS }}
